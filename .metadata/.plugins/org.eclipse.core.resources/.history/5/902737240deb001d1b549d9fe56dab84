package com.lced.user.service.service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.transaction.Transactional;

import org.hibernate.annotations.common.util.impl.LoggerFactory;
import org.slf4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.lced.user.service.entities.Rating;
import com.lced.user.service.entities.User;
import com.lced.user.service.exceptiondefined.ResourceNotFoundException;
import com.lced.user.service.repository.UserRepository;

@Service
@Transactional
public class UserServiceImpl implements IUserService {
	@Autowired
	private UserRepository userRepository;

	@Autowired
	private RestTemplate restTemplate;

	private Logger logger = org.slf4j.LoggerFactory.getLogger(UserServiceImpl.class);

	@Override
	public User saveUser(User user) {
		String randomUserId = UUID.randomUUID().toString();
		user.setUserId(randomUserId);
		return userRepository.save(user);
	}

	@Override
	public List<User> getAllUser() {
		return userRepository.findAll();
	}

	@Override
	public User getUser(String userId) {
		User user = userRepository.findById(userId).orElseThrow(
				() -> new ResourceNotFoundException("User with given id not found on server!!!!!! " + userId));
		
		List<ArrayList> ratingsByUser = restTemplate.getForEntity("http://localhost:8081/users/2e8281cb-3609-4d17-8a55-e592f32c759b", ArrayList.class);
		logger.info("{}", ratingsByUser);
		user.setRatings(ratingsByUser);

		return user;
	}

}
